@mixin transition($transition...) {
    @if $enable-transitions {
        transition: $transition;
    }
}

// Functions
@function rem-to-dip($size) {
    @if unit($size) != 'em' or unit($size) != 'rem' {
        @return $size / ($size * 0 + 1);
    }

    $value: $size * 15;

    @return round($value);
}

@function filter-by-text($list, $starts, $excludes, $recursive: false) {
    $result: ();

    @for $i from 1 through length($list) {
        @if type-of(nth($list, $i)) == list and $recursive {
            $result: append($result, filter-by-text(nth($list, $i), $starts, $recursive));
        } @else if str-index(nth($list, $i), $starts) == 1 {
            $result: append($result, nth($list, $i));
        }
    }

    @return $result;
}

@function filter-selectors($selectors, $compat: false) {
    @return filter-by-text($selectors, \., \.nt-);
}

@function check-contrast($color) {
    $color-brightness: round((red($color) * 299) + (green($color) * 587) + (blue($color) * 114) / 1000);
    $light-color: round((red(#ffffff) * 299) + (green(#ffffff) * 587) + (blue(#ffffff) * 114) / 1000);

    @return abs($color-brightness) < ($light-color / 1.7);
}

@function text-contrast($color, $intensity: 60%, $lighten: null) {
    @if check-contrast($color) {
        $lighten: if($lighten != null, $lighten, $intensity);

        @return lighten($color, $lighten);
    } @else {

        @return darken($color, $intensity);
    }
}

@function scale-contrast($color, $intensity: 60%, $lighten: null) {
    @if check-contrast($color) {
        $lighten: if($lighten != null, $lighten, $intensity);

        @return scale_color($color, $lightness: $lighten);
    } @else {
        @return scale_color($color, $lightness: -$intensity);
    }
}

@function contrasted($color, $to-color, $intensity: 60%, $lighten: null) {
    @if check-contrast($to-color) {
        $lighten: if($lighten != null, $lighten, $intensity);

        @return lighten($color, $lighten);
    } @else {
        @return darken($color, $intensity);
    }
}

@function decontrasted($color, $to-color, $intensity: 30%, $darken: null) {
    @if check-contrast($to-color) {
        $darken: if($darken != null, $darken, $intensity);

        @return darken($color, $darken);
    } @else {
        @return lighten($color, $intensity);
    }
}


@function slice($list, $start: 1, $end: length($list)) {
    $result: ();

    @if ($start > $end) {
        @return $result;
    }

    @for $i from $start through $end {
        $result: append($result, nth($list, $i));
    }

    @return $result;
}
